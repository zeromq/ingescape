# Fix solution generated by cmake
param (
   [string]$buildFolder = $(throw "-buildFolder is requiered."),
   [string]$projectName = "IngescapeCSharp"
)

# Update output buffer size to prevent clipping in Visual Studio project file.
if( $Host -and $Host.UI -and $Host.UI.RawUI ) {
  $rawUI = $Host.UI.RawUI
  $oldSize = $rawUI.BufferSize
  $typeName = $oldSize.GetType( ).FullName
  $newSize = New-Object $typeName (200, $oldSize.Height)
  $rawUI.BufferSize = $newSize
}

# Check if solution folder exist
if (!(Test-Path "$buildFolder\$projectName.sln" -PathType Leaf)) {
   throw "Solution file do not exist: $buildFolder\$projectName.sln"
}

# Store current location
$StartLocation = $PSScriptRoot
# Go to build folder
Set-Location $buildFolder

<# use dotnet util (part of the .NET Core SDK) to remove projects with problems
   from the solution because I am really tired of regexes #>
& "$Env:Programfiles\dotnet\dotnet.exe" sln $projectName.sln remove ALL_BUILD.vcxproj
if (!$?) {
   Set-Location $StartLocation
   throw "Cannot remove ALL_BUILD referance in solution: $projectName.sln"
}
Remove-Item ALL_BUILD.vcxproj
Remove-Item ALL_BUILD.vcxproj.filters

((Get-Content "$projectName.csproj") `
  <# add Sdk attribute to project which is needed by netstandard1.4 #> `
  -replace ('<Project ','<Project Sdk="Microsoft.NET.Sdk" ') `
  <# remove reference to ZERO_CHECK project which causes problems #> `
  -replace ('(?ms)<ProjectReference.*</ProjectReference>','') |
  <# remove imports that are unneccessary for netstandard1.4 and cause
     problems #> `
  Select-String -Pattern "Microsoft.CSharp.targets" -NotMatch |
  Select-String -Pattern "Microsoft.Common.props" -NotMatch |
  <# for some reason, Select-String prepends an empty line which is not
     allowed before <?xml ..., so we trim it away. #>
  Out-String).Trim() | Out-File "$projectName.csproj"
if (!$?) {
   Set-Location $StartLocation
   throw "Cannot fix $projectName.csproj project file"
}

& "$Env:Programfiles\dotnet\dotnet.exe" restore "$projectName.csproj"
if (!$?) {
   Set-Location $StartLocation
   throw "Cannot initialise project dependancies $projectName.csproj"
}
Set-Location $StartLocation